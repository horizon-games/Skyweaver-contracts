/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface ConquestPaymentInterface extends ethers.utils.Interface {
  functions: {
    "assignOwnership(address,uint256)": FunctionFragment;
    "conquestEntryID()": FunctionFragment;
    "getOwnerTier(address)": FunctionFragment;
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": FunctionFragment;
    "onERC1155Received(address,address,uint256,uint256,bytes)": FunctionFragment;
    "silverRangeMax()": FunctionFragment;
    "silverRangeMin()": FunctionFragment;
    "skyweaverAssets()": FunctionFragment;
    "supportsInterface(bytes4)": FunctionFragment;
    "withdrawERC20(address,address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "assignOwnership",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "conquestEntryID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerTier",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155BatchReceived",
    values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "onERC1155Received",
    values: [string, string, BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "silverRangeMax",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "silverRangeMin",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "skyweaverAssets",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawERC20",
    values: [string, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "assignOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "conquestEntryID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerTier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155BatchReceived",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "onERC1155Received",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "silverRangeMax",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "silverRangeMin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "skyweaverAssets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawERC20",
    data: BytesLike
  ): Result;

  events: {
    "OwnershipGranted(address,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "OwnershipGranted"): EventFragment;
}

export class ConquestPayment extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: ConquestPaymentInterface;

  functions: {
    assignOwnership(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "assignOwnership(address,uint256)"(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    conquestEntryID(overrides?: CallOverrides): Promise<[BigNumber]>;

    "conquestEntryID()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getOwnerTier(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getOwnerTier(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    silverRangeMax(overrides?: CallOverrides): Promise<[BigNumber]>;

    "silverRangeMax()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    silverRangeMin(overrides?: CallOverrides): Promise<[BigNumber]>;

    "silverRangeMin()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    skyweaverAssets(overrides?: CallOverrides): Promise<[string]>;

    "skyweaverAssets()"(overrides?: CallOverrides): Promise<[string]>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    withdrawERC20(
      _recipient: string,
      _erc20: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "withdrawERC20(address,address)"(
      _recipient: string,
      _erc20: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  assignOwnership(
    _address: string,
    _tier: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "assignOwnership(address,uint256)"(
    _address: string,
    _tier: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  conquestEntryID(overrides?: CallOverrides): Promise<BigNumber>;

  "conquestEntryID()"(overrides?: CallOverrides): Promise<BigNumber>;

  getOwnerTier(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

  "getOwnerTier(address)"(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  onERC1155BatchReceived(
    arg0: string,
    arg1: string,
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
    arg0: string,
    arg1: string,
    _ids: BigNumberish[],
    _amounts: BigNumberish[],
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  onERC1155Received(
    _operator: string,
    _from: string,
    _id: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "onERC1155Received(address,address,uint256,uint256,bytes)"(
    _operator: string,
    _from: string,
    _id: BigNumberish,
    _amount: BigNumberish,
    _data: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  silverRangeMax(overrides?: CallOverrides): Promise<BigNumber>;

  "silverRangeMax()"(overrides?: CallOverrides): Promise<BigNumber>;

  silverRangeMin(overrides?: CallOverrides): Promise<BigNumber>;

  "silverRangeMin()"(overrides?: CallOverrides): Promise<BigNumber>;

  skyweaverAssets(overrides?: CallOverrides): Promise<string>;

  "skyweaverAssets()"(overrides?: CallOverrides): Promise<string>;

  supportsInterface(
    interfaceID: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "supportsInterface(bytes4)"(
    interfaceID: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  withdrawERC20(
    _recipient: string,
    _erc20: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "withdrawERC20(address,address)"(
    _recipient: string,
    _erc20: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    assignOwnership(
      _address: string,
      _tier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "assignOwnership(address,uint256)"(
      _address: string,
      _tier: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    conquestEntryID(overrides?: CallOverrides): Promise<BigNumber>;

    "conquestEntryID()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOwnerTier(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getOwnerTier(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    silverRangeMax(overrides?: CallOverrides): Promise<BigNumber>;

    "silverRangeMax()"(overrides?: CallOverrides): Promise<BigNumber>;

    silverRangeMin(overrides?: CallOverrides): Promise<BigNumber>;

    "silverRangeMin()"(overrides?: CallOverrides): Promise<BigNumber>;

    skyweaverAssets(overrides?: CallOverrides): Promise<string>;

    "skyweaverAssets()"(overrides?: CallOverrides): Promise<string>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    withdrawERC20(
      _recipient: string,
      _erc20: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawERC20(address,address)"(
      _recipient: string,
      _erc20: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    OwnershipGranted(
      owner: string | null,
      previousTier: BigNumberish | null,
      newTier: BigNumberish | null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber],
      { owner: string; previousTier: BigNumber; newTier: BigNumber }
    >;
  };

  estimateGas: {
    assignOwnership(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "assignOwnership(address,uint256)"(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    conquestEntryID(overrides?: CallOverrides): Promise<BigNumber>;

    "conquestEntryID()"(overrides?: CallOverrides): Promise<BigNumber>;

    getOwnerTier(_owner: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getOwnerTier(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    silverRangeMax(overrides?: CallOverrides): Promise<BigNumber>;

    "silverRangeMax()"(overrides?: CallOverrides): Promise<BigNumber>;

    silverRangeMin(overrides?: CallOverrides): Promise<BigNumber>;

    "silverRangeMin()"(overrides?: CallOverrides): Promise<BigNumber>;

    skyweaverAssets(overrides?: CallOverrides): Promise<BigNumber>;

    "skyweaverAssets()"(overrides?: CallOverrides): Promise<BigNumber>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawERC20(
      _recipient: string,
      _erc20: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "withdrawERC20(address,address)"(
      _recipient: string,
      _erc20: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    assignOwnership(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "assignOwnership(address,uint256)"(
      _address: string,
      _tier: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    conquestEntryID(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "conquestEntryID()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwnerTier(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOwnerTier(address)"(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    onERC1155BatchReceived(
      arg0: string,
      arg1: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)"(
      arg0: string,
      arg1: string,
      _ids: BigNumberish[],
      _amounts: BigNumberish[],
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    onERC1155Received(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "onERC1155Received(address,address,uint256,uint256,bytes)"(
      _operator: string,
      _from: string,
      _id: BigNumberish,
      _amount: BigNumberish,
      _data: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    silverRangeMax(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "silverRangeMax()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    silverRangeMin(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "silverRangeMin()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    skyweaverAssets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "skyweaverAssets()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    supportsInterface(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "supportsInterface(bytes4)"(
      interfaceID: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawERC20(
      _recipient: string,
      _erc20: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "withdrawERC20(address,address)"(
      _recipient: string,
      _erc20: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
